<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PermutationSort</name>
    </assembly>
    <members>
        <member name="T:PermutationSort.Program">
            <summary>
            Write a C# program to sort a list of elements using Permutation Sort.
            
            Permutation sort, proceeds by generating the possible permutations of the input array/list until
            discovering the sorted one.
            
            Notes: 
            * This actually employs the concept that is tied with method overloading
            </summary>
        </member>
        <member name="M:PermutationSort.Program.Main(System.String[])">
            <summary>
            This is the driver method.
            </summary>
            <param name="args">Project specific arguments.</param>
        </member>
        <member name="M:PermutationSort.Program.GetPermutation(System.Char[])">
            <summary>
            This method will get the permutations that are available.
            </summary>
            <param name="list">The list of characters, stored as an array.</param>
        </member>
        <member name="M:PermutationSort.Program.GetPermutation(System.Char[],System.Int32,System.Int32)">
            <summary>
            This is a method of getting permutations, and possibly an overload.
            </summary>
            <param name="list">The list of characters.</param>
            <param name="k">The starting index.</param>
            <param name="m">The ending index.</param>
        </member>
        <member name="M:PermutationSort.Program.Swap(System.Char@,System.Char@)">
            <summary>
            This method will swap two characters.
            </summary>
            <param name="a">The first character to swap.</param>
            <param name="b">The second character to swap.</param>
        </member>
    </members>
</doc>
